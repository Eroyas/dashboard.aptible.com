import DS from 'ember-data';
import Ember from 'ember';

export const SEVERITIES = [
  'Very Low', 'Low', 'Medium', 'High', 'Very High'
];

export default DS.Model.extend({
  riskAssessment: DS.belongsTo('risk-assessment'),
  handle: DS.attr('string'),
  title: DS.attr('string'),
  description: DS.attr('string'),
  severity: DS.attr('number'),
  appliedControlledSeverity: DS.attr('number'),
  plannedControlledSeverity: DS.attr('number'),


  securityControls: DS.hasMany('security-control', { embedded: true }),
  threatEvents: DS.hasMany('threat-event', { embedded: true }),
  mitigations: DS.hasMany('mitigation', { embedded: true }),

  scaledSeverity: Ember.computed('severity', function() {
    // FIXME: This convertes the 10 point severity scale into a 5 point scale
    // Should probably just update the baseline risk graph rather than doing this
    let severity = this.get('severity');

    if([9,10].indexOf(severity) > -1) { return 4; }
    if([6,7,8].indexOf(severity) > -1) { return 3; }
    if([3,4,5].indexOf(severity) > -1) { return 2; }
    if([1,2].indexOf(severity) > -1) { return 1; }

    return 0;
  }),

  severityText: Ember.computed('scaledSeverity', function() {
    return SEVERITIES[this.get('scaledSeverity') || 0];
  })
});
